{"ast":null,"code":"export function alter(squares, i, j) {\n  var io = i;\n  var jo = j;\n  var value = squares[i][j];\n  var dirs = makeDir(); //tempの型はi,jの配列を保持する配列\n\n  var temp = [];\n  var alters = [];\n\n  for (let d = 0; d < dirs.length; d++) {\n    //dirs8方向ぶん回す\n    while (true) {\n      //dirぶんXY軸足す足す足す\n      i += dirs[d][0];\n      j += dirs[d][1];\n\n      if (i < 0 || i > 7 || j < 0 || j > 7) {\n        //枠外に出たら無効なのでこのdir処理は停止\n        console.log(\"枠外\");\n        temp = [];\n        break;\n      } else if (squares[i][j] == null) {\n        //次がnullなら無効なのでこのdir処理は停止\n        console.log(\"null\");\n        temp = [];\n        break;\n      } else if (value === squares[i][j]) {\n        //味方の駒ならdirが集まったとみなし、forを抜ける\n        console.log(\"味方の駒\");\n        break;\n      }\n\n      console.log(\"敵の駒\"); //値をtempに挿入\n\n      temp.push([i, j]);\n    } //temp配列の数が0以上なら続行\n\n\n    if (temp.length > 0) {\n      for (let s = 0; s < temp.length; s++) {\n        //temp配列を順番にとって\n        //temp配列の値をalters配列に入れる\n        alters.push(temp[s]);\n      }\n    }\n\n    i = io;\n    j = jo;\n    temp = [];\n  } //altersが0でなければaltersにオリジナルを追加\n\n\n  if (alters.length === 0) {\n    squares[io][jo] = null;\n  } else {\n    for (let v = 0; v < alters.length; v++) {\n      squares[alters[v][0]][alters[v][1]] = value;\n    }\n  }\n}\n\nfunction makeDir() {\n  return [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n}","map":{"version":3,"sources":["C:/projects/practice/othello/src/methods/alter.js"],"names":["alter","squares","i","j","io","jo","value","dirs","makeDir","temp","alters","d","length","console","log","push","s","v"],"mappings":"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","sourcesContent":["export function alter(squares, i, j) {\r\n    var io = i;\r\n    var jo = j;\r\n    var value = squares[i][j];\r\n    var dirs = makeDir();\r\n    //tempの型はi,jの配列を保持する配列\r\n    var temp = [];\r\n    var alters = [];\r\n    for (let d = 0; d < dirs.length; d++) {//dirs8方向ぶん回す\r\n        while (true) {//dirぶんXY軸足す足す足す\r\n            i += dirs[d][0];\r\n            j += dirs[d][1];\r\n\r\n            if (i < 0 || i > 7 || j < 0 || j > 7) {//枠外に出たら無効なのでこのdir処理は停止\r\n                console.log(\"枠外\");\r\n                temp = [];\r\n                break;\r\n            }\r\n            else if (squares[i][j] == null) {//次がnullなら無効なのでこのdir処理は停止\r\n                console.log(\"null\");\r\n                temp = [];\r\n                break;\r\n            } else if (value === squares[i][j]) {//味方の駒ならdirが集まったとみなし、forを抜ける\r\n                console.log(\"味方の駒\");\r\n                break;\r\n            }\r\n            console.log(\"敵の駒\");\r\n            //値をtempに挿入\r\n            temp.push([i, j]);\r\n        }\r\n        //temp配列の数が0以上なら続行\r\n        if (temp.length > 0) {\r\n            for (let s = 0; s < temp.length; s++) {//temp配列を順番にとって\r\n                //temp配列の値をalters配列に入れる\r\n                alters.push(temp[s]);\r\n            }\r\n        }\r\n        i = io;\r\n        j = jo;\r\n        temp = [];\r\n    }\r\n    //altersが0でなければaltersにオリジナルを追加\r\n    if (alters.length === 0) {\r\n        squares[io][jo] = null;\r\n    } else {\r\n        for (let v = 0; v < alters.length; v++) {\r\n            squares[alters[v][0]][alters[v][1]] = value;\r\n        }\r\n    }\r\n}\r\n\r\nfunction makeDir() {\r\n    return [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\r\n}"]},"metadata":{},"sourceType":"module"}